name: Build, Package, Release
'on':
  release:
    types:
      - created
  push:
    branches:
      - main
env:
  VERSION: null
jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure at least one tag exists
        run: |
          if [ -z "$(git tag)" ]; then
            echo "No tags found. You must create at least one tag to use this workflow."
            exit 1
          fi
      - name: Ensure the latest tag is a semantic version
        id: determine_version
        run: |
          VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          if [[ ! "$VERSION" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "The latest tag $VERSION is not a semantic version. Ensure the tag follows semantic versioning (e.g., 1.0.0 or v1.0.0)."
            exit 1
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Determined version: $VERSION"
      - id: containerRegistryLogin
        name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.MO_REGISTRY_AUTH_URL__MAIN }}
          username: ${{ vars.MO_REGISTRY_USER__MAIN }}
          password: ${{ secrets.MO_REGISTRY_PAT__MAIN }}
      - name: Build image
        run: |
          docker build -f ${{ vars.MO_DOCKERFILE__MAIN }} ${{vars.MO_DOCKER_ARGS__MAIN}} -t ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }} -t ${{ vars.MO_IMAGE_NAME__MAIN }}:latest ${{vars.MO_DOCKERCONTEXT__MAIN}}
      - name: Push image
        run: |
          docker push ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }}
          docker push ${{ vars.MO_IMAGE_NAME__MAIN }}:latest
      - id: releaseWithMogenius-24e2353c8f7b6271e8aa
        name: Release with mogenius
        uses: mogenius/mogenius-release-action@v1
        with:
          dev: true
          image: ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }}
          kind: Deployment
          namespace: my-namespace
          resourceName: test001
          containerName: test001
          keyKind: ${{ vars.MO_API_KIND__MAIN }}
          token: ${{ secrets.MO_API_TOKEN__MAIN }}
      - id: releaseWithMogenius-929252caef72ecdf5915
        name: Release with mogenius
        uses: mogenius/mogenius-release-action@v1
        with:
          dev: true
          image: ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }}
          kind: Deployment
          namespace: my-namespace
          resourceName: test002
          containerName: test002
          keyKind: ${{ vars.MO_API_KIND__MAIN }}
          token: ${{ secrets.MO_API_TOKEN__MAIN }}
      - id: releaseWithMogenius-ceab89fea7debe49c35e
        name: Release with mogenius
        uses: mogenius/mogenius-release-action@v1
        with:
          dev: true
          image: ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }}
          kind: Deployment
          namespace: project-1-default-31o09d
          resourceName: test003
          containerName: test003
          keyKind: ${{ vars.MO_API_KIND__MAIN }}
          token: ${{ secrets.MO_API_TOKEN__MAIN }}
      - id: releaseWithMogenius-52b6582df750bf5c3dfd
        name: Release with mogenius
        uses: mogenius/mogenius-release-action@v1
        with:
          dev: true
          image: ${{ vars.MO_IMAGE_NAME__MAIN }}:${{ env.VERSION }}
          kind: Deployment
          namespace: my-namespace2
          resourceName: test004
          containerName: test004
          keyKind: ${{ vars.MO_API_KIND__MAIN }}
          token: ${{MO_API_TOKEN__52b6582df750bf5c3dfd__MAIN}}
     
